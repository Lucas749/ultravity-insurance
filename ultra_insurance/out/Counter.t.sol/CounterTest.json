{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "counter",
      "outputs": [
        {
          "internalType": "contract Counter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIncrement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "testSetNumber",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b506110738061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806385226c811161008c578063b913a5ca11610066578063b913a5ca1461019f578063ba414fa6146101a7578063e20c9f71146101bf578063fa7626d4146101c757600080fd5b806385226c811461017a578063916a17c61461018f578063b5508aa91461019757600080fd5b80633f7286f4116100c85780633f7286f41461011f57806361bc221a1461012757806366d9a9a01461015257806370f985be1461016757600080fd5b80630a9254e4146100ef5780631ed7831c146100f95780633e5e3c2314610117575b600080fd5b6100f76101d4565b005b61010161026d565b60405161010e9190610c9f565b60405180910390f35b6101016102cf565b61010161032f565b601b5461013a906001600160a01b031681565b6040516001600160a01b03909116815260200161010e565b61015a61038f565b60405161010e9190610cec565b6100f7610175366004610d9f565b61047e565b61018261055f565b60405161010e9190610de4565b61015a61062f565b610182610715565b6100f76107e5565b6101af6108d0565b604051901515815260200161010e565b6101016109fb565b6000546101af9060ff1681565b6040516101e090610c92565b604051809103906000f0801580156101fc573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b03929092169182179055604051633fb5c1cb60e01b815260006004820152633fb5c1cb90602401600060405180830381600087803b15801561025357600080fd5b505af1158015610267573d6000803e3d6000fd5b50505050565b6060600d8054806020026020016040519081016040528092919081815260200182805480156102c557602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102a7575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156102c5576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102a7575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156102c5576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102a7575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156104755760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561045d57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161041f5790505b505050505081525050815260200190600101906103b3565b50505050905090565b601b54604051633fb5c1cb60e01b8152600481018390526001600160a01b0390911690633fb5c1cb90602401600060405180830381600087803b1580156104c457600080fd5b505af11580156104d8573d6000803e3d6000fd5b5050505061055c601b60009054906101000a90046001600160a01b03166001600160a01b0316638381f58a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190610e5e565b82610a5b565b50565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156104755783829060005260206000200180546105a290610e77565b80601f01602080910402602001604051908101604052809291908181526020018280546105ce90610e77565b801561061b5780601f106105f05761010080835404028352916020019161061b565b820191906000526020600020905b8154815290600101906020018083116105fe57829003601f168201915b505050505081526020019060010190610583565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156104755760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156106fd57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106bf5790505b50505050508152505081526020019060010190610653565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101561047557838290600052602060002001805461075890610e77565b80601f016020809104026020016040519081016040528092919081815260200182805461078490610e77565b80156107d15780601f106107a6576101008083540402835291602001916107d1565b820191906000526020600020905b8154815290600101906020018083116107b457829003601f168201915b505050505081526020019060010190610739565b601b60009054906101000a90046001600160a01b03166001600160a01b031663d09de08a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561083557600080fd5b505af1158015610849573d6000803e3d6000fd5b505050506108ce601b60009054906101000a90046001600160a01b03166001600160a01b0316638381f58a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c79190610e5e565b6001610a5b565b565b60008054610100900460ff16156108f05750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156109f65760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161097e917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610eb1565b60408051601f198184030181529082905261099891610ee2565b6000604051808303816000865af19150503d80600081146109d5576040519150601f19603f3d011682016040523d82523d6000602084013e6109da565b606091505b50915050808060200190518101906109f29190610efe565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156102c5576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102a7575050505050905090565b808214610b82577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610acc9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610b82610b86565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c815760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610c209291602001610eb1565b60408051601f1981840301815290829052610c3a91610ee2565b6000604051808303816000865af19150503d8060008114610c77576040519150601f19603f3d011682016040523d82523d6000602084013e610c7c565b606091505b505050505b6000805461ff001916610100179055565b61011680610f2883390190565b6020808252825182820181905260009190848201906040850190845b81811015610ce05783516001600160a01b031683529284019291840191600101610cbb565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610d9057898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610d7b5783516001600160e01b0319168252928b019260019290920191908b0190610d51565b50978a01979550505091870191600101610d14565b50919998505050505050505050565b600060208284031215610db157600080fd5b5035919050565b60005b83811015610dd3578181015183820152602001610dbb565b838111156102675750506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e5157878503603f1901845281518051808752610e32818989018a8501610db8565b601f01601f191695909501860194509285019290850190600101610e0b565b5092979650505050505050565b600060208284031215610e7057600080fd5b5051919050565b600181811c90821680610e8b57607f821691505b602082108103610eab57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610ed4816004850160208701610db8565b919091016004019392505050565b60008251610ef4818460208701610db8565b9190910192915050565b600060208284031215610f1057600080fd5b81518015158114610f2057600080fd5b939250505056fe608060405234801561001057600080fd5b5060f78061001f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80633fb5c1cb1460415780638381f58a146053578063d09de08a14606d575b600080fd5b6051604c3660046083565b600055565b005b605b60005481565b60405190815260200160405180910390f35b6051600080549080607c83609b565b9190505550565b600060208284031215609457600080fd5b5035919050565b60006001820160ba57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212208d48b0418fd68b7d571e5a39582f996d31c36315783e466de440e1beb479a91364736f6c634300080d0033a2646970667358221220b3e81faa2932f6d9443a57fac75016c41bb4bd0a0ea78bca303400a03fd5252e64736f6c634300080d0033",
    "sourceMap": "124:396:27:-:0;;;1609:26:0;;;1631:4;-1:-1:-1;;1609:26:0;;;;;;;;3384:44:4;;;;;;;;;;;124:396:27;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806385226c811161008c578063b913a5ca11610066578063b913a5ca1461019f578063ba414fa6146101a7578063e20c9f71146101bf578063fa7626d4146101c757600080fd5b806385226c811461017a578063916a17c61461018f578063b5508aa91461019757600080fd5b80633f7286f4116100c85780633f7286f41461011f57806361bc221a1461012757806366d9a9a01461015257806370f985be1461016757600080fd5b80630a9254e4146100ef5780631ed7831c146100f95780633e5e3c2314610117575b600080fd5b6100f76101d4565b005b61010161026d565b60405161010e9190610c9f565b60405180910390f35b6101016102cf565b61010161032f565b601b5461013a906001600160a01b031681565b6040516001600160a01b03909116815260200161010e565b61015a61038f565b60405161010e9190610cec565b6100f7610175366004610d9f565b61047e565b61018261055f565b60405161010e9190610de4565b61015a61062f565b610182610715565b6100f76107e5565b6101af6108d0565b604051901515815260200161010e565b6101016109fb565b6000546101af9060ff1681565b6040516101e090610c92565b604051809103906000f0801580156101fc573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b03929092169182179055604051633fb5c1cb60e01b815260006004820152633fb5c1cb90602401600060405180830381600087803b15801561025357600080fd5b505af1158015610267573d6000803e3d6000fd5b50505050565b6060600d8054806020026020016040519081016040528092919081815260200182805480156102c557602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102a7575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156102c5576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102a7575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156102c5576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102a7575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156104755760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561045d57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161041f5790505b505050505081525050815260200190600101906103b3565b50505050905090565b601b54604051633fb5c1cb60e01b8152600481018390526001600160a01b0390911690633fb5c1cb90602401600060405180830381600087803b1580156104c457600080fd5b505af11580156104d8573d6000803e3d6000fd5b5050505061055c601b60009054906101000a90046001600160a01b03166001600160a01b0316638381f58a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190610e5e565b82610a5b565b50565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156104755783829060005260206000200180546105a290610e77565b80601f01602080910402602001604051908101604052809291908181526020018280546105ce90610e77565b801561061b5780601f106105f05761010080835404028352916020019161061b565b820191906000526020600020905b8154815290600101906020018083116105fe57829003601f168201915b505050505081526020019060010190610583565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156104755760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156106fd57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106bf5790505b50505050508152505081526020019060010190610653565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101561047557838290600052602060002001805461075890610e77565b80601f016020809104026020016040519081016040528092919081815260200182805461078490610e77565b80156107d15780601f106107a6576101008083540402835291602001916107d1565b820191906000526020600020905b8154815290600101906020018083116107b457829003601f168201915b505050505081526020019060010190610739565b601b60009054906101000a90046001600160a01b03166001600160a01b031663d09de08a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561083557600080fd5b505af1158015610849573d6000803e3d6000fd5b505050506108ce601b60009054906101000a90046001600160a01b03166001600160a01b0316638381f58a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c79190610e5e565b6001610a5b565b565b60008054610100900460ff16156108f05750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156109f65760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161097e917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610eb1565b60408051601f198184030181529082905261099891610ee2565b6000604051808303816000865af19150503d80600081146109d5576040519150601f19603f3d011682016040523d82523d6000602084013e6109da565b606091505b50915050808060200190518101906109f29190610efe565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156102c5576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102a7575050505050905090565b808214610b82577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610acc9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610b82610b86565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c815760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610c209291602001610eb1565b60408051601f1981840301815290829052610c3a91610ee2565b6000604051808303816000865af19150503d8060008114610c77576040519150601f19603f3d011682016040523d82523d6000602084013e610c7c565b606091505b505050505b6000805461ff001916610100179055565b61011680610f2883390190565b6020808252825182820181905260009190848201906040850190845b81811015610ce05783516001600160a01b031683529284019291840191600101610cbb565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610d9057898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610d7b5783516001600160e01b0319168252928b019260019290920191908b0190610d51565b50978a01979550505091870191600101610d14565b50919998505050505050505050565b600060208284031215610db157600080fd5b5035919050565b60005b83811015610dd3578181015183820152602001610dbb565b838111156102675750506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e5157878503603f1901845281518051808752610e32818989018a8501610db8565b601f01601f191695909501860194509285019290850190600101610e0b565b5092979650505050505050565b600060208284031215610e7057600080fd5b5051919050565b600181811c90821680610e8b57607f821691505b602082108103610eab57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610ed4816004850160208701610db8565b919091016004019392505050565b60008251610ef4818460208701610db8565b9190910192915050565b600060208284031215610f1057600080fd5b81518015158114610f2057600080fd5b939250505056fe608060405234801561001057600080fd5b5060f78061001f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80633fb5c1cb1460415780638381f58a146053578063d09de08a14606d575b600080fd5b6051604c3660046083565b600055565b005b605b60005481565b60405190815260200160405180910390f35b6051600080549080607c83609b565b9190505550565b600060208284031215609457600080fd5b5035919050565b60006001820160ba57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212208d48b0418fd68b7d571e5a39582f996d31c36315783e466de440e1beb479a91364736f6c634300080d0033a2646970667358221220b3e81faa2932f6d9443a57fac75016c41bb4bd0a0ea78bca303400a03fd5252e64736f6c634300080d0033",
    "sourceMap": "124:396:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;188:94;;;:::i;:::-;;2229:136:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3018:135;;;:::i;2711:143::-;;;:::i;159:22:27:-;;;;;-1:-1:-1;;;;;159:22:27;;;;;;-1:-1:-1;;;;;858:32:28;;;840:51;;828:2;813:18;159:22:27;677:220:28;2523:180:7;;;:::i;:::-;;;;;;;:::i;401:117:27:-;;;;;;:::i;:::-;;:::i;2373:142:7:-;;;:::i;:::-;;;;;;;:::i;2862:148::-;;;:::i;1926:143::-;;;:::i;288:107:27:-;;;:::i;1865:600:0:-;;;:::i;:::-;;;4093:14:28;;4086:22;4068:41;;4056:2;4041:18;1865:600:0;3928:187:28;2077:144:7;;;:::i;1609:26:0:-;;;;;;;;;188:94:27;232:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;222:7:27;:23;;-1:-1:-1;;;;;;222:23:27;-1:-1:-1;;;;;222:23:27;;;;;;;;;255:20;;-1:-1:-1;;;255:20:27;;-1:-1:-1;255:20:27;;;4274:25:28;255:17:27;;4247:18:28;;255:20:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;188:94::o;2229:136:7:-;2276:33;2341:16;2322:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2322:35:7;;;;;;;;;;;;;;;;;;;;;;;2229:136;:::o;3018:135::-;3064:33;3129:16;3110:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3110:35:7;;;;;;;;;;;;;;;;;;;;;;3018:135;:::o;2711:143::-;2759:35;2828:18;2807:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2807:39:7;;;;;;;;;;;;;;;;;;;;;;2711:143;:::o;2523:180::-;2579:48;2669:26;2640:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2640:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2640:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2523:180;:::o;401:117:27:-;452:7;;:20;;-1:-1:-1;;;452:20:27;;;;;4274:25:28;;;-1:-1:-1;;;;;452:7:27;;;;:17;;4247:18:28;;452:20:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;482:29;491:7;;;;;;;;;-1:-1:-1;;;;;491:7:27;-1:-1:-1;;;;;491:14:27;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;509:1;482:8;:29::i;:::-;401:117;:::o;2373:142:7:-;2421:34;2489:18;2468:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2862:148;2910:40;2984:18;2963:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2963:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2963:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1926:143;1975:34;2043:18;2022:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;288:107:27;330:7;;;;;;;;;-1:-1:-1;;;;;330:7:27;-1:-1:-1;;;;;330:17:27;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;359:29;368:7;;;;;;;;;-1:-1:-1;;;;;368:7:27;-1:-1:-1;;;;;368:14:27;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;386:1;359:8;:29::i;:::-;288:107::o;1865:600:0:-;1899:4;1920:7;;;;;;;1916:542;;;-1:-1:-1;1951:7:0;;;;;;;;1865:600::o;1916:542::-;1991:17;3077:42;3065:55;3148:16;2031:382;;2251:43;;;1712:64;2251:43;;;5240:51:28;;;-1:-1:-1;;;5307:18:28;;;5300:34;2251:43:0;;;;;;;;;5213:18:28;;;2251:43:0;;;-1:-1:-1;;1712:64:0;;2139:178;;2189:34;;2139:178;;;:::i;:::-;;;;-1:-1:-1;;2139:178:0;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:0:o;2077:144:7:-;2126:35;2195:18;2174:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2174:39:7;;;;;;;;;;;;;;;;;;;;;;2077:144;:::o;5365:269:0:-;5428:1;5423;:6;5419:208;;5451:41;;;;;6484:2:28;6466:21;;;6523:2;6503:18;;;6496:30;6562:34;6557:2;6542:18;;6535:62;-1:-1:-1;;;6628:2:28;6613:18;;6606:32;6670:3;6655:19;;6282:398;5451:41:0;;;;;;;;5512:31;;;6897:21:28;;;6954:2;6934:18;;;6927:30;-1:-1:-1;;;6988:2:28;6973:18;;6966:40;7073:4;7058:20;;7051:36;;;5512:31:0;;;;;;;7038:3:28;5512:31:0;;;5563;;;7310:21:28;;;7367:2;7347:18;;;7340:30;-1:-1:-1;;;7401:2:28;7386:18;;7379:40;7486:4;7471:20;;7464:36;;;5563:31:0;;;;;;;7451:3:28;5563:31:0;;;5609:6;:4;:6::i;:::-;5365:269;;:::o;2473:443::-;3077:42;3065:55;3148:16;2517:367;;2721:67;;;1712:64;2721:67;;;7713:51:28;;;-1:-1:-1;;;7780:18:28;;;7773:34;;;;2781:4:0;7823:18:28;;;7816:34;2555:11:0;;1712:64;2654:43;;7686:18:28;;2721:67:0;;;-1:-1:-1;;2721:67:0;;;;;;;;;;2608:199;;;2721:67;2608:199;;:::i;:::-;;;;-1:-1:-1;;2608:199:0;;;;;;;;;;2572:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2517:367:0;2894:7;:14;;-1:-1:-1;;2894:14:0;;;;;2473:443::o;-1:-1:-1:-;;;;;;;;:::o;14:658:28:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:28;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:28;;14:658;-1:-1:-1;;;;;;14:658:28:o;902:1567::-;1104:4;1133:2;1173;1162:9;1158:18;1203:2;1192:9;1185:21;1226:6;1261;1255:13;1292:6;1284;1277:22;1318:2;1308:12;;1351:2;1340:9;1336:18;1329:25;;1413:2;1403:6;1400:1;1396:14;1385:9;1381:30;1377:39;1451:2;1443:6;1439:15;1472:1;1493;1503:937;1519:6;1514:3;1511:15;1503:937;;;1588:22;;;-1:-1:-1;;1584:36:28;1572:49;;1644:13;;1731:9;;-1:-1:-1;;;;;1727:35:28;1712:51;;1802:11;;1796:18;1834:15;;;1827:27;;;1915:19;;1684:15;;;1947:24;;;2037:21;;;;2082:1;;2005:2;1993:15;;;2096:236;2112:8;2107:3;2104:17;2096:236;;;2193:15;;-1:-1:-1;;;;;;2189:42:28;2175:57;;2301:17;;;;2140:1;2131:11;;;;;2258:14;;;;2096:236;;;-1:-1:-1;2418:12:28;;;;2355:5;-1:-1:-1;;;2383:15:28;;;;1545:1;1536:11;1503:937;;;-1:-1:-1;2457:6:28;;902:1567;-1:-1:-1;;;;;;;;;902:1567:28:o;2474:180::-;2533:6;2586:2;2574:9;2565:7;2561:23;2557:32;2554:52;;;2602:1;2599;2592:12;2554:52;-1:-1:-1;2625:23:28;;2474:180;-1:-1:-1;2474:180:28:o;2659:258::-;2731:1;2741:113;2755:6;2752:1;2749:13;2741:113;;;2831:11;;;2825:18;2812:11;;;2805:39;2777:2;2770:10;2741:113;;;2872:6;2869:1;2866:13;2863:48;;;-1:-1:-1;;2907:1:28;2889:16;;2882:27;2659:258::o;2922:1001::-;3084:4;3113:2;3153;3142:9;3138:18;3183:2;3172:9;3165:21;3206:6;3241;3235:13;3272:6;3264;3257:22;3310:2;3299:9;3295:18;3288:25;;3372:2;3362:6;3359:1;3355:14;3344:9;3340:30;3336:39;3322:53;;3410:2;3402:6;3398:15;3431:1;3441:453;3455:6;3452:1;3449:13;3441:453;;;3520:22;;;-1:-1:-1;;3516:36:28;3504:49;;3576:13;;3618:9;;3640:24;;;3677:61;3618:9;3712:15;;;3699:11;;;3677:61;:::i;:::-;3804:2;3781:17;-1:-1:-1;;3777:31:28;3765:44;;;;3761:53;;;-1:-1:-1;3872:12:28;;;;3837:15;;;;3477:1;3470:9;3441:453;;;-1:-1:-1;3911:6:28;;2922:1001;-1:-1:-1;;;;;;;2922:1001:28:o;4492:184::-;4562:6;4615:2;4603:9;4594:7;4590:23;4586:32;4583:52;;;4631:1;4628;4621:12;4583:52;-1:-1:-1;4654:16:28;;4492:184;-1:-1:-1;4492:184:28:o;4681:380::-;4760:1;4756:12;;;;4803;;;4824:61;;4878:4;4870:6;4866:17;4856:27;;4824:61;4931:2;4923:6;4920:14;4900:18;4897:38;4894:161;;4977:10;4972:3;4968:20;4965:1;4958:31;5012:4;5009:1;5002:15;5040:4;5037:1;5030:15;4894:161;;4681:380;;;:::o;5345:371::-;-1:-1:-1;;;;;;5530:33:28;;5518:46;;5587:13;;5500:3;;5609:61;5587:13;5659:1;5650:11;;5643:4;5631:17;;5609:61;:::i;:::-;5690:16;;;;5708:1;5686:24;;5345:371;-1:-1:-1;;;5345:371:28:o;5721:274::-;5850:3;5888:6;5882:13;5904:53;5950:6;5945:3;5938:4;5930:6;5926:17;5904:53;:::i;:::-;5973:16;;;;;5721:274;-1:-1:-1;;5721:274:28:o;6000:277::-;6067:6;6120:2;6108:9;6099:7;6095:23;6091:32;6088:52;;;6136:1;6133;6126:12;6088:52;6168:9;6162:16;6221:5;6214:13;6207:21;6200:5;6197:32;6187:60;;6243:1;6240;6233:12;6187:60;6266:5;6000:277;-1:-1:-1;;;6000:277:28:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "counter()": "61bc221a",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testIncrement()": "b913a5ca",
    "testSetNumber(uint256)": "70f985be"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"contract Counter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIncrement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"testSetNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Counter.t.sol\":\"CounterTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce\",\"dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x88b585aa59e3e902707a99ca0e59a85adbe623c138b6410e6c8b536de965089a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e199ff9217b07e9f59f72cc4b85a301bb37ce9cda7aea8ed30369e60d747450\",\"dweb:/ipfs/QmSmsTeuzawFLCmyVCKntQYfnXvjRcLLrvtapeVJ73hUUg\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d\",\"dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x38f3a383c5495b57efd8d315557c5bca39bec6caa431872f8c53e11d535895ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a38bb1019ecd6bee8d4cddb59c4d7f7a279562fbbc4d065c1cd8c28101eef539\",\"dweb:/ipfs/QmebHsuM1XxsJGEfckqYrUy7p4pvytSHkDKUVYANFCYPKm\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x5a2b86d1f8f9f900c7262bc82a2bb3236fbebed3b82d0eabbad9fd92872e433e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8d4aef35f0550acd308149f3c66dda49bc18c4cff6aba1610b72d4f7082cbf\",\"dweb:/ipfs/QmRvD7LiFoTazWnDTXQeBVXiPHrVM2A5a4F9cmXryCRFRq\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b\",\"dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xff81e4317ee73c2da1de7d6923ec3ef3ccce5caa5311c5c40be7db6491aed9a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c3428e58ec9c686122dc929e15a176111e61559c917642cd8383ed9b8d0b3dc\",\"dweb:/ipfs/QmfWAgNfTnzoKVWTtH9mWdMDw6SPHUZpAAud2irxPuRur3\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x65fd0eeda28da592bf035912ab236b353a1f2b93c4372d2f48370e075bea6dc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db136c28bc3f1c73fc581028a18ef94d05aa5ec013396c4a0fde529ceb782139\",\"dweb:/ipfs/QmTAe7RzMAokM9WyifonX1rLgAfCP9r1Z1EC1JgyyAiybX\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8\",\"dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x5a0b30c49be6f9380a2cee0f227b51a984f8b75f6e28e28560eee14d1f1bc681\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2f1b6aa8fa11d044a8a1ed92dee3a8c1e82c8d955972fb16dcd9a829d4d5ddd\",\"dweb:/ipfs/QmPhgwgED3nZioET7kuK1xQfQrnuzKjtKyiH6YaCAiFHNd\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x94403be0e45ff8f5721b2a43e400b6e2bf3e47b186ba8496661fb53657193857\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1064aac5968b5a1cfbdff18320f84cd408cce84bcfcb3897c26ac51668c3d6db\",\"dweb:/ipfs/QmZ7kDxWbREfafNuQkZGn2ktmBZ5Nv6ddbg9tocZzeEXNK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6f235647b768dfb6471b80fc62c660e5a31017f334fa4c17a8e3c8da3ec262f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5b5672c7c33ef630bb3b97e19e7d83a9434a44161bbb62636bd6c1c3ff54a2c\",\"dweb:/ipfs/QmQstig63EiVeMddYoMwFzkdyRyyKNPyVPCYBN87dNNJVY\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x9a5500f0c1af7353726c0974bf693c1791473aa98f5b4f82ef377c9603aa39dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fb35abfd696cf75cf3e625a8ba571df4323abfd075f658780dee0e4d9dc9343\",\"dweb:/ipfs/QmbhAfSTm8n1QQtkZVgdSixQjQN9sdVWaqSVpmMA9V4Lqv\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x474fada02f5647c17adc14fd064733fd72c0e4a74736836aa45cd1729cc04b60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6bdc5a84b129b542f0e77b38d21a09733fbfa8d81e9812459e0b5b85f152c22\",\"dweb:/ipfs/QmPoAx8FKteLrg38CTe9QTFxfk3E36X7zpRxYQKhP5YTKt\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42\",\"dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3a9f913b929362c5ae23101a19d72df5f8dc4e357ff895e6d546c9e549117273\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ac891596c301064567a367cccf41a89d4803612819c3bd9e830adeda330e4c0\",\"dweb:/ipfs/QmacNFCYH9fnhRoRSYBzApC7byhs5p9LoGCvBDBdzPmjqN\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20\",\"dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ\"]},\"src/Counter.sol\":{\"keccak256\":\"0x09277f949d59a9521708c870dc39c2c434ad8f86a5472efda6a732ef728c0053\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://94cd5258357da018bf911aeda60ed9f5b130dce27445669ee200313cd3389200\",\"dweb:/ipfs/QmNbEfWAqXCtfQpk6u7TpGa8sTHXFLpUz7uebz2FVbchSC\"]},\"test/Counter.t.sol\":{\"keccak256\":\"0xc594348aaeba347b0ab0f63db2f8c18b27edf85296e55f976c6be680cfd58436\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ccff0ef93464b025c109790bb8560859a9b907ba69738f89cb5660f221a87362\",\"dweb:/ipfs/QmUz1EFdPjMyQJCtkfLTTHa5SUNM9dC4RLbrTt4PrF75Be\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "counter",
          "outputs": [
            {
              "internalType": "contract Counter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIncrement"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSetNumber"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Counter.t.sol": "CounterTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4",
        "urls": [
          "bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce",
          "dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x88b585aa59e3e902707a99ca0e59a85adbe623c138b6410e6c8b536de965089a",
        "urls": [
          "bzz-raw://5e199ff9217b07e9f59f72cc4b85a301bb37ce9cda7aea8ed30369e60d747450",
          "dweb:/ipfs/QmSmsTeuzawFLCmyVCKntQYfnXvjRcLLrvtapeVJ73hUUg"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471",
        "urls": [
          "bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d",
          "dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x38f3a383c5495b57efd8d315557c5bca39bec6caa431872f8c53e11d535895ed",
        "urls": [
          "bzz-raw://a38bb1019ecd6bee8d4cddb59c4d7f7a279562fbbc4d065c1cd8c28101eef539",
          "dweb:/ipfs/QmebHsuM1XxsJGEfckqYrUy7p4pvytSHkDKUVYANFCYPKm"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x5a2b86d1f8f9f900c7262bc82a2bb3236fbebed3b82d0eabbad9fd92872e433e",
        "urls": [
          "bzz-raw://2e8d4aef35f0550acd308149f3c66dda49bc18c4cff6aba1610b72d4f7082cbf",
          "dweb:/ipfs/QmRvD7LiFoTazWnDTXQeBVXiPHrVM2A5a4F9cmXryCRFRq"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701",
        "urls": [
          "bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b",
          "dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xff81e4317ee73c2da1de7d6923ec3ef3ccce5caa5311c5c40be7db6491aed9a1",
        "urls": [
          "bzz-raw://4c3428e58ec9c686122dc929e15a176111e61559c917642cd8383ed9b8d0b3dc",
          "dweb:/ipfs/QmfWAgNfTnzoKVWTtH9mWdMDw6SPHUZpAAud2irxPuRur3"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x65fd0eeda28da592bf035912ab236b353a1f2b93c4372d2f48370e075bea6dc2",
        "urls": [
          "bzz-raw://db136c28bc3f1c73fc581028a18ef94d05aa5ec013396c4a0fde529ceb782139",
          "dweb:/ipfs/QmTAe7RzMAokM9WyifonX1rLgAfCP9r1Z1EC1JgyyAiybX"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399",
        "urls": [
          "bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8",
          "dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x5a0b30c49be6f9380a2cee0f227b51a984f8b75f6e28e28560eee14d1f1bc681",
        "urls": [
          "bzz-raw://e2f1b6aa8fa11d044a8a1ed92dee3a8c1e82c8d955972fb16dcd9a829d4d5ddd",
          "dweb:/ipfs/QmPhgwgED3nZioET7kuK1xQfQrnuzKjtKyiH6YaCAiFHNd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x94403be0e45ff8f5721b2a43e400b6e2bf3e47b186ba8496661fb53657193857",
        "urls": [
          "bzz-raw://1064aac5968b5a1cfbdff18320f84cd408cce84bcfcb3897c26ac51668c3d6db",
          "dweb:/ipfs/QmZ7kDxWbREfafNuQkZGn2ktmBZ5Nv6ddbg9tocZzeEXNK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6f235647b768dfb6471b80fc62c660e5a31017f334fa4c17a8e3c8da3ec262f2",
        "urls": [
          "bzz-raw://e5b5672c7c33ef630bb3b97e19e7d83a9434a44161bbb62636bd6c1c3ff54a2c",
          "dweb:/ipfs/QmQstig63EiVeMddYoMwFzkdyRyyKNPyVPCYBN87dNNJVY"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x9a5500f0c1af7353726c0974bf693c1791473aa98f5b4f82ef377c9603aa39dd",
        "urls": [
          "bzz-raw://6fb35abfd696cf75cf3e625a8ba571df4323abfd075f658780dee0e4d9dc9343",
          "dweb:/ipfs/QmbhAfSTm8n1QQtkZVgdSixQjQN9sdVWaqSVpmMA9V4Lqv"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x474fada02f5647c17adc14fd064733fd72c0e4a74736836aa45cd1729cc04b60",
        "urls": [
          "bzz-raw://a6bdc5a84b129b542f0e77b38d21a09733fbfa8d81e9812459e0b5b85f152c22",
          "dweb:/ipfs/QmPoAx8FKteLrg38CTe9QTFxfk3E36X7zpRxYQKhP5YTKt"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837",
        "urls": [
          "bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42",
          "dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x3a9f913b929362c5ae23101a19d72df5f8dc4e357ff895e6d546c9e549117273",
        "urls": [
          "bzz-raw://5ac891596c301064567a367cccf41a89d4803612819c3bd9e830adeda330e4c0",
          "dweb:/ipfs/QmacNFCYH9fnhRoRSYBzApC7byhs5p9LoGCvBDBdzPmjqN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307",
        "urls": [
          "bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20",
          "dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ"
        ],
        "license": "MIT"
      },
      "src/Counter.sol": {
        "keccak256": "0x09277f949d59a9521708c870dc39c2c434ad8f86a5472efda6a732ef728c0053",
        "urls": [
          "bzz-raw://94cd5258357da018bf911aeda60ed9f5b130dce27445669ee200313cd3389200",
          "dweb:/ipfs/QmNbEfWAqXCtfQpk6u7TpGa8sTHXFLpUz7uebz2FVbchSC"
        ],
        "license": "UNLICENSED"
      },
      "test/Counter.t.sol": {
        "keccak256": "0xc594348aaeba347b0ab0f63db2f8c18b27edf85296e55f976c6be680cfd58436",
        "urls": [
          "bzz-raw://ccff0ef93464b025c109790bb8560859a9b907ba69738f89cb5660f221a87362",
          "dweb:/ipfs/QmUz1EFdPjMyQJCtkfLTTHa5SUNM9dC4RLbrTt4PrF75Be"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Counter.t.sol",
    "id": 30971,
    "exportedSymbols": {
      "Counter": [
        29776
      ],
      "CounterTest": [
        30970
      ],
      "DSTest": [
        2291
      ],
      "StdAssertions": [
        3818
      ],
      "StdChains": [
        4512
      ],
      "StdCheats": [
        6788
      ],
      "StdInvariant": [
        7078
      ],
      "StdStorage": [
        7828
      ],
      "StdStyle": [
        10472
      ],
      "StdUtils": [
        11279
      ],
      "Test": [
        11328
      ],
      "TestBase": [
        2351
      ],
      "Vm": [
        12687
      ],
      "console": [
        20751
      ],
      "console2": [
        28847
      ],
      "stdError": [
        6854
      ],
      "stdJson": [
        7654
      ],
      "stdMath": [
        7796
      ],
      "stdStorage": [
        9261
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:482:27",
    "nodes": [
      {
        "id": 30910,
        "nodeType": "PragmaDirective",
        "src": "39:24:27",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 30911,
        "nodeType": "ImportDirective",
        "src": "65:28:27",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30971,
        "sourceUnit": 11329,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30912,
        "nodeType": "ImportDirective",
        "src": "94:28:27",
        "nodes": [],
        "absolutePath": "src/Counter.sol",
        "file": "../src/Counter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30971,
        "sourceUnit": 29777,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30970,
        "nodeType": "ContractDefinition",
        "src": "124:396:27",
        "nodes": [
          {
            "id": 30917,
            "nodeType": "VariableDeclaration",
            "src": "159:22:27",
            "nodes": [],
            "constant": false,
            "functionSelector": "61bc221a",
            "mutability": "mutable",
            "name": "counter",
            "nameLocation": "174:7:27",
            "scope": 30970,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Counter_$29776",
              "typeString": "contract Counter"
            },
            "typeName": {
              "id": 30916,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30915,
                "name": "Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29776,
                "src": "159:7:27"
              },
              "referencedDeclaration": 29776,
              "src": "159:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counter_$29776",
                "typeString": "contract Counter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30934,
            "nodeType": "FunctionDefinition",
            "src": "188:94:27",
            "nodes": [],
            "body": {
              "id": 30933,
              "nodeType": "Block",
              "src": "212:70:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30920,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30917,
                      "src": "222:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Counter_$29776",
                        "typeString": "contract Counter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 30923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "232:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Counter_$29776_$",
                          "typeString": "function () returns (contract Counter)"
                        },
                        "typeName": {
                          "id": 30922,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30921,
                            "name": "Counter",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 29776,
                            "src": "236:7:27"
                          },
                          "referencedDeclaration": 29776,
                          "src": "236:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Counter_$29776",
                            "typeString": "contract Counter"
                          }
                        }
                      },
                      "id": 30924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "232:13:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Counter_$29776",
                        "typeString": "contract Counter"
                      }
                    },
                    "src": "222:23:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Counter_$29776",
                      "typeString": "contract Counter"
                    }
                  },
                  "id": 30926,
                  "nodeType": "ExpressionStatement",
                  "src": "222:23:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 30930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "273:1:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 30927,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30917,
                        "src": "255:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Counter_$29776",
                          "typeString": "contract Counter"
                        }
                      },
                      "id": 30929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29768,
                      "src": "255:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 30931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "255:20:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30932,
                  "nodeType": "ExpressionStatement",
                  "src": "255:20:27"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "197:5:27",
            "parameters": {
              "id": 30918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "202:2:27"
            },
            "returnParameters": {
              "id": 30919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "212:0:27"
            },
            "scope": 30970,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30950,
            "nodeType": "FunctionDefinition",
            "src": "288:107:27",
            "nodes": [],
            "body": {
              "id": 30949,
              "nodeType": "Block",
              "src": "320:75:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 30937,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30917,
                        "src": "330:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Counter_$29776",
                          "typeString": "contract Counter"
                        }
                      },
                      "id": 30939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29775,
                      "src": "330:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 30940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "330:19:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30941,
                  "nodeType": "ExpressionStatement",
                  "src": "330:19:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30943,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30917,
                            "src": "368:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Counter_$29776",
                              "typeString": "contract Counter"
                            }
                          },
                          "id": 30944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29758,
                          "src": "368:14:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 30945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "368:16:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 30946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "386:1:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 30942,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2519,
                        2544,
                        2557,
                        2573,
                        2615,
                        2657,
                        2699,
                        2736,
                        2773,
                        2810,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "359:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "359:29:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30948,
                  "nodeType": "ExpressionStatement",
                  "src": "359:29:27"
                }
              ]
            },
            "functionSelector": "b913a5ca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIncrement",
            "nameLocation": "297:13:27",
            "parameters": {
              "id": 30935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "310:2:27"
            },
            "returnParameters": {
              "id": 30936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:0:27"
            },
            "scope": 30970,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30969,
            "nodeType": "FunctionDefinition",
            "src": "401:117:27",
            "nodes": [],
            "body": {
              "id": 30968,
              "nodeType": "Block",
              "src": "442:76:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30958,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30952,
                        "src": "470:1:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30955,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30917,
                        "src": "452:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Counter_$29776",
                          "typeString": "contract Counter"
                        }
                      },
                      "id": 30957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29768,
                      "src": "452:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 30959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "452:20:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30960,
                  "nodeType": "ExpressionStatement",
                  "src": "452:20:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 30962,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30917,
                            "src": "491:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Counter_$29776",
                              "typeString": "contract Counter"
                            }
                          },
                          "id": 30963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29758,
                          "src": "491:14:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 30964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "491:16:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 30965,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30952,
                        "src": "509:1:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30961,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2519,
                        2544,
                        2557,
                        2573,
                        2615,
                        2657,
                        2699,
                        2736,
                        2773,
                        2810,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "482:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "482:29:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30967,
                  "nodeType": "ExpressionStatement",
                  "src": "482:29:27"
                }
              ]
            },
            "functionSelector": "70f985be",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSetNumber",
            "nameLocation": "410:13:27",
            "parameters": {
              "id": 30953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30952,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "432:1:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 30969,
                  "src": "424:9:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "423:11:27"
            },
            "returnParameters": {
              "id": 30954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:0:27"
            },
            "scope": 30970,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30913,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11328,
              "src": "148:4:27"
            },
            "id": 30914,
            "nodeType": "InheritanceSpecifier",
            "src": "148:4:27"
          }
        ],
        "canonicalName": "CounterTest",
        "contractDependencies": [
          29776
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30970,
          11328,
          2351,
          2348,
          11279,
          7078,
          6788,
          6109,
          4512,
          3818,
          2291
        ],
        "name": "CounterTest",
        "nameLocation": "133:11:27",
        "scope": 30971,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 27
}